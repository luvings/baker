# ~/.tmux.conf
# cheat sheet:
#   https://gist.github.com/andreyvit/2921703
# reference:
#   https://leanpub.com/the-tao-of-tmux/
#   https://github.com/gotbletu/dotfiles/blob/master/tmux/.tmux.conf

# change prefix key to M-v
unbind-key M-v
set-option -g prefix M-v
bind-key v send-prefix
# goto last used window
bind-key M-v last-window

# vim keys in command prompt
set-option -g status-keys vi
# vim keys in copy or choice mode
set-window-option -g mode-keys vi

####################
# Window
####################

### Create/Destroy
# c		Create a new window.
bind-key c	new-window -a -c "#{pane_current_path}"
# C		Create a new window with verticle split panes.
bind-key C	new-window -c "#{pane_current_path}" \; split-window -d -c "#{pane_current_path}"
# ,		Rename the current window.
# &		Kill the current window.
bind-key &	unlink-window -k
# i		Display some information about the current window.

### Select
# 0 to 9	Select windows 0 to 9.
# p		Change to the previous window.
# n		Change to the next window.
# l		Move to the previously selected window.
# '		Prompt for a window index to select.
# w		Choose the current window from list interactively.
# M-p		Move to the previous window with a bell or activity marker.
# M-n		Move to the next window with a bell or activity marker.
# f		Prompt to search for text in open windows.
# switch window without prefix key
bind-key -n M-1 select-window -t :1
bind-key -n M-2 select-window -t :2
bind-key -n M-3 select-window -t :3
bind-key -n M-4 select-window -t :4
bind-key -n M-5 select-window -t :5
bind-key -n M-6 select-window -t :6
bind-key -n M-7 select-window -t :7
bind-key -n M-8 select-window -t :8
bind-key -n M-9 select-window -t :9
bind-key -n M-0 select-window -t :10
bind-key -n M-- last-window
bind-key -n M-u select-window -t :-  # prev window
bind-key -n M-i select-window -t :+  # next window

### Move
# .		Prompt for an index to swap with the current window.
bind-key .	command-prompt "swap-window -t '%%'"
# y		Move the marked window here
bind-key y	move-window -a -s "{marked}"
# Y		Link the marked window here
bind-key Y	link-window -a -s "{marked}"
# No more prompting to choose window
#bind-key y	choose-tree -u -b "has-session -t %%" -c "move-window -a -s %%"
#bind-key Y	choose-tree -u -b "has-session -t %%" -c "link-window -a -s %%"
bind-key -n M-U swap-window -t -1
bind-key -n M-I swap-window -t +1

####################
# Pane
####################

### Create/Kill
# "		Split the current pane into two, top and bottom.
# %		Split the current pane into two, left and right.
# x		Kill the current pane.

### Join pane
bind-key '|' join-pane -h \; select-pane -M
bind-key '\' join-pane -v \; select-pane -M

### Select
# o		Select the next pane in the current window.
# q		Briefly display pane indexes.
# ;		Move to the previously active pane.
# Up, Down
# Left, Right
#		Change to the pane above, below, to the left, or to the
#		right of the current pane.
# m		Mark the current pane (see select-pane -m).
# M		Clear the marked pane.

### Move
# C-o		Rotate the panes in the current window forwards.
# M-o		Rotate the panes in the current window backwards.
# {		Swap the current pane with the previous pane.
# }		Swap the current pane with the next pane.

### Resize
# C-Up, C-Down
# C-Left, C-Right
#		Resize the current pane in steps of one cell.
# M-Up, M-Down
# M-Left, M-Right
#		Resize the current pane in steps of five cells.


### Layout
# !		Break the current pane out of the window.
# z		Toggle zoom state of the current pane.
# Space		Arrange the current window in the next preset layout.
#
# M-1 to M-5	(DISABLED) Arrange panes in one of the five preset layouts:
#		1. even-horizontal
#		2. even-vertical
#		3. main-horizontal
#		4. main-vertical
#		5. tiled

####################
# Session
####################

# s		Select a new session for the attached client interactively.
bind-key S	command-prompt "new-session -A -s '%%'"
# (		Switch the attached client to the previous session.
# )		Switch the attached client to the next session.
# L		Switch the attached client back to the last session.
#bind-key -n "M-[" switch-client -p
#bind-key -n "M-]" switch-client -n
bind-key -n "M-_" switch-client -l

# d		Detach the current client.
# D		Choose a client to detach.
# $		Rename the current session

# Creating a session:
#   $ tmux new-session -s work
# Create a new session that shares all windows with an existing session, but has its own separate notion of which window is current:
#   $ tmux new-session -s work2 -t work
# Attach to a session:
#   $ tmux attach -t work

####################
# Copy/Paste
####################

# [		Enter copy mode to copy text or view the history.
# ]		Paste the most recently copied buffer of text.

# ENABLE PageUp as copy mode, while functions as normal in ncurses app (vim,nano ..etc)
bind-key -T root PgUp if-shell -F "#{alternate_on}" "send-keys PgUp" "copy-mode -eu"

# =		Choose which buffer to paste interactively from a list.
# #		List all paste buffers.
# -		Delete the most recently copied buffer of text.

# In Copy Mode
#    SPC	begin-selection
#    v		begin-selection
bind-key -T copy-mode-vi v send-keys -X begin-selection
#    h/j/k/l	cursor movement
#    Enter	copy-selection-and-cancel
#    D		copy-end-of-line
#    A		select-append-selection
#    C-v	rectangle-toggle
#    y		copy-selection
bind-key -T copy-mode-vi y send-keys -X copy-selection-and-cancel
#    Y		copy-line
bind-key -T copy-mode-vi Y send-keys -X copy-line
#    >		copy selection to clipboard
bind-key -T copy-mode-vi > send-keys -X copy-selection\; run-shell 'tmux show-buffer | xsel -i -b'

# xsel integration
# "run-shell 'tmux set-buffer -- \"$(xsel -o -b)\"'; paste-buffer"
bind-key < command-prompt -p "tmux <- xsel? (Enter/Esc)" "run-shell 'xsel -o -b | tmux load-buffer -'; paste-buffer"
bind-key > command-prompt -p "tmux -> xsel? (Enter/Esc)" "run-shell 'tmux show-buffer | xsel -i -b'"

####################
# Misc
####################

# :		Enter the tmux command prompt.
# ?		List all key bindings.
# r		Force redraw of the attached client.
# C-z		Suspend the tmux client.
# t		Show the time.
# ~		Show previous messages from tmux, if any.

# clear screen and scrollback history
bind-key C-l send-keys C-l \; run 'tmux clear-history'

# sync panes (send what you are typing to other panes.)
bind-key C-s set-window-option synchronize-panes

# temporarily allow regular terminal copy mode while mouse mode is enable
# shift+mouse: visual line
# ctrl+shift+mouse: visual block
# ctrl+mouse: visual bock
# toggle mouse on/off (replaced with silence monitor)
# bind-key M set-option -g -q mouse

# config edit and reload
bind-key E new-window -n 'tmux.conf' '${EDITOR:-vim} ~/.tmux.conf && tmux source ~/.tmux.conf && tmux display "~/.tmux.conf sourced"'
bind-key R source-file ~/.tmux.conf \; display-message "Configuration reloaded"

# stats
bind-key M-s new-window -n stats -c $HOME \; \
  send-keys 'htop' 'Enter' \; \
  split-window -h -p 40 -t 1  \; \
  send-keys 'df' 'Enter' \; \
  split-window -v -p 50 -t 2  \; \
  select-pane -t 3

# urlview
# demo video: http://www.youtube.com/watch?v=guB4WuVFhtY
# https://wiki.archlinux.org/index.php/Tmux#Browsing_URL.27s
# to set default browser add to ~/.urlview; COMMAND exec >> /tmp/urlview.out 2>&1; set -x; $BROWSER
# bind-key U capture-pane \; save-buffer /tmp/tmux-buffer \; new-window -n "urlview" '$SHELL -c "urlview < /tmp/tmux-buffer"'

####################
# Options
####################

# default shell
set-option -g default-command /bin/bash
set-option -g default-shell /bin/bash

# start window/pane index on 1 instead of 0
set-option -g base-index 1
set-window-option -g pane-base-index 1
# auto renumber windows sequentially
set-option -g renumber-windows on

# fix delay time between tmux & vim
set-option -sg escape-time 0

# Rather than constraining window size to the maximum size of any client
# connected to the *session*, constrain window size to the maximum size of any
# client connected to *that window*. Much more reasonable.
set-window-option -g aggressive-resize on

# set display timelimit
set-option -g display-panes-time 300
set-option -g display-time 200

# history size
set-option -g history-limit 10000

# Use xterm keys
set-option -g xterm-keys on

# Enable 256 color terminal
set-option -g default-terminal "screen-256color-s"

# The following helps with Shift-PageUp/Shift-PageDown
set-option -g terminal-overrides 'xterm*:smcup@:rmcup@'

# window notifications; display activity on other window
set-option -g visual-activity off
set-window-option -g monitor-activity on

# refresh the status bar every 5 second.
set-option -g status-interval 5

# Time messages remain in the status bar. Lower this number
# if this is too distracting.
set-option -g display-time 4000

# Switche to another active session if the last shell in a session exists
set-option -g detach-on-destroy off

####################
# Notification
####################
# To raise a bell, run: echo -e '\a'
set-window-option -g visual-bell on
set-window-option -g bell-action other
set-hook -g alert-bell "run-shell 'notify-send -t 10000 -i dialog-information \"TMUX BELL\" \"#I #W (#h #S)\n#{t:window_activity}\"'"

# Silence
# M           Monitor silence
bind-key "M" if-shell 'V="$(tmux showw -v monitor-silence)" && test -z "${V/0/}"' "display 'Slience on 30s'; setw monitor-silence 3" "display 'Silence off'; setw monitor-silence 0"
set-window-option -g visual-silence on
set-window-option -g silence-action any
set-hook -g alert-silence 'run-shell "/home/huang/bin/r \"notify-send -t 10000 -i dialog-information \'TMUX SILENCE\' \'#I #W (#h #S)\n#{t:window_activity}\'\""'
#set-hook alert-silence 'run-shell "tmux display \"OK now\""'
# tmux run-shell "/home/huang/bin/r \"notify-send -t 10000 -i dialog-information 'TMUX SILENCE' '#I #W (#h #S)\n#{t:window_activity}'\""

####################
# Theme
####################

# message color
set-option -g message-style "fg=colour144,bg=colour237"
set-option -g message-command-style "fg=colour144,bg=colour237"

# pane divider color
set-option -g pane-active-border-style "fg=colour27"
set-option -g pane-border-style "fg=colour237"

# status bar
set-option -g status-style "bg=colour234,none"

# status left
set-option -g status-left-style none
set-option -g status-left-length 100
set-option -g status-left "#[fg=colour15,bg=colour27]#h#[fg=colour39,bg=colour237,none] #S "

# status window list
set-option -g status-justify centre
set-window-option -g window-status-separator ""

# window title inactive colors
set-window-option -g window-status-style "fg=colour144,bg=colour234,none"
set-window-option -g window-status-format " #I#{?window_flags,#F,:} #W "

# window title active colors
set-window-option -g window-status-current-style "fg=colour39,bg=colour237,none"
set-window-option -g window-status-current-format " #I#F #W "

set-window-option -g window-status-activity-style "fg=colour144,bg=colour234,none"

# status right
set-option -g status-right-style none
set-option -g status-right-length 100
set-option -g status-right "#[fg=colour144,bg=colour237] #(~/.tmux-status.sh)  %H:%M"

#
# Powerline Yellow Block - Tmux Themepack
# https://github.com/jimeh/tmux-themepack
#
# Inspired by vim-powerline: https://github.com/powerline/powerline
#
# Requires terminal to be using a powerline compatible font, find one here:
# https://github.com/powerline/fonts
#

# Themepack format options
set -goq @themepack-status-left-area-left-format "#S"
set -goq @themepack-status-left-area-middle-format "#(whoami)"
set -goq @themepack-status-left-area-right-format "#I:#P"
set -goq @themepack-status-right-area-left-format "%H:%M:%S"
set -goq @themepack-status-right-area-middle-format "%d-%b-%y"
set -goq @themepack-status-right-area-right-format "#H"
set -goq @themepack-window-status-current-format "#I:#W#F"
set -goq @themepack-window-status-format "#I:#W#F"

# Customizable prefixes and suffixes for @themepack-* format options
set -goq @themepack-status-left-area-left-prefix ""
set -goq @themepack-status-left-area-left-suffix ""
set -goq @themepack-status-left-area-middle-prefix ""
set -goq @themepack-status-left-area-middle-suffix ""
set -goq @themepack-status-left-area-right-prefix ""
set -goq @themepack-status-left-area-right-suffix ""
set -goq @themepack-status-right-area-left-prefix ""
set -goq @themepack-status-right-area-left-suffix ""
set -goq @themepack-status-right-area-middle-prefix ""
set -goq @themepack-status-right-area-middle-suffix ""
set -goq @themepack-status-right-area-right-prefix ""
set -goq @themepack-status-right-area-right-suffix ""
set -goq @themepack-window-status-current-prefix ""
set -goq @themepack-window-status-current-suffix ""
set -goq @themepack-window-status-prefix ""
set -goq @themepack-window-status-suffix ""

# Apply prefixes and suffixes to @themepack-* format options
set -gqF @themepack-status-left-area-left-format "#{@themepack-status-left-area-left-prefix}#{@themepack-status-left-area-left-format}#{@themepack-status-left-area-left-suffix}"
set -gqF @themepack-status-left-area-middle-format "#{@themepack-status-left-area-middle-prefix}#{@themepack-status-left-area-middle-format}#{@themepack-status-left-area-middle-suffix}"
set -gqF @themepack-status-left-area-right-format "#{@themepack-status-left-area-right-prefix}#{@themepack-status-left-area-right-format}#{@themepack-status-left-area-right-suffix}"
set -gqF @themepack-status-right-area-left-format "#{@themepack-status-right-area-left-prefix}#{@themepack-status-right-area-left-format}#{@themepack-status-right-area-left-suffix}"
set -gqF @themepack-status-right-area-middle-format "#{@themepack-status-right-area-middle-prefix}#{@themepack-status-right-area-middle-format}#{@themepack-status-right-area-middle-suffix}"
set -gqF @themepack-status-right-area-right-format "#{@themepack-status-right-area-right-prefix}#{@themepack-status-right-area-right-format}#{@themepack-status-right-area-right-suffix}"
set -gqF @themepack-window-status-current-format "#{@themepack-window-status-current-prefix}#{@themepack-window-status-current-format}#{@themepack-window-status-current-suffix}"
set -gqF @themepack-window-status-format "#{@themepack-window-status-prefix}#{@themepack-window-status-format}#{@themepack-window-status-suffix}"

# Powerline color options
set -goq @powerline-color-main-1 colour227
set -goq @powerline-color-main-2 colour227
set -goq @powerline-color-main-3 colour229
set -goq @powerline-color-black-1 black
set -goq @powerline-color-grey-1 colour233
set -goq @powerline-color-grey-2 colour235
set -goq @powerline-color-grey-3 colour238
set -goq @powerline-color-grey-4 colour240
set -goq @powerline-color-grey-5 colour243
set -goq @powerline-color-grey-6 colour245

# Powerline Block Override
set -goqF @powerline-color-activity-1 "#{@powerline-color-main-3}"

# Powerline options
set -goqF @powerline-color-activity-1 "#{@powerline-color-grey-6}"
set -goqF @powerline-status-bg "#{@powerline-color-grey-1}"
set -goqF @powerline-status-fg "#{@powerline-color-grey-4}"
set -goqF @powerline-status-left-area-left-bg "#{@powerline-color-main-1}"
set -goqF @powerline-status-left-area-left-fg "#{@powerline-status-bg}"
set -goqF @powerline-status-left-area-middle-bg "#{@powerline-status-fg}"
set -goqF @powerline-status-left-area-middle-fg "#{@powerline-status-bg}"
set -goqF @powerline-status-left-area-right-bg "#{@powerline-color-grey-2}"
set -goqF @powerline-status-left-area-right-fg "#{@powerline-status-fg}"
set -goqF @powerline-status-left-bg "#{@powerline-color-grey-1}"
set -goqF @powerline-status-left-fg "#{@powerline-color-grey-5}"
set -goqF @powerline-status-right-area-left-bg "#{@powerline-color-grey-2}"
set -goqF @powerline-status-right-area-left-fg "#{@powerline-status-fg}"
set -goqF @powerline-status-right-area-middle-bg "#{@powerline-status-fg}"
set -goqF @powerline-status-right-area-middle-fg "#{@powerline-status-bg}"
set -goqF @powerline-status-right-area-right-bg "#{@powerline-color-grey-6}"
set -goqF @powerline-status-right-area-right-fg "#{@powerline-status-bg}"
set -goqF @powerline-status-right-bg "#{@powerline-color-grey-1}"
set -goqF @powerline-status-right-fg "#{@powerline-color-grey-5}"

# Theme options
set -goqF @theme-clock-mode-colour "#{@powerline-color-main-1}"
set -goq  @theme-clock-mode-style 24
set -goqF @theme-display-panes-active-colour "#{@powerline-color-grey-6}"
set -goqF @theme-display-panes-colour "#{@powerline-color-grey-1}"
set -goqF @theme-message-bg "#{@powerline-color-main-1}"
set -goqF @theme-message-command-bg "#{@powerline-color-main-1}"
set -goqF @theme-message-command-fg "#{@powerline-color-black-1}"
set -goqF @theme-message-fg "#{@powerline-color-black-1}"
set -goqF @theme-mode-bg "#{@powerline-color-main-1}"
set -goqF @theme-mode-fg "#{@powerline-color-black-1}"
set -goq  @theme-pane-active-border-bg default
set -goqF @theme-pane-active-border-fg "#{@powerline-color-main-1}"
set -goq  @theme-pane-border-bg default
set -goqF @theme-pane-border-fg "#{@powerline-color-grey-3}"
set -goqF @theme-status-bg "#{@powerline-status-bg}"
set -goqF @theme-status-fg "#{@powerline-status-fg}"
set -goq  @theme-status-interval 1
set -goq  @theme-status-justify centre
set -goqF @theme-status-left "#[fg=#{@powerline-status-left-area-left-fg},bg=#{@powerline-status-left-area-left-bg},bold] #{@themepack-status-left-area-left-format} #[fg=#{@powerline-status-left-area-left-bg},bg=#{@powerline-status-left-area-middle-bg},nobold]#[fg=#{@powerline-status-left-area-middle-fg},bg=#{@powerline-status-left-area-middle-bg}] #{@themepack-status-left-area-middle-format} #[fg=#{@powerline-status-left-area-middle-bg},bg=#{@powerline-status-left-area-right-bg}]#[fg=#{@powerline-status-left-area-right-fg},bg=#{@powerline-status-left-area-right-bg}] #{@themepack-status-left-area-right-format} #[fg=#{@powerline-status-left-area-right-bg},bg=#{@theme-status-bg},nobold]"
set -goqF @theme-status-left-bg "#{@powerline-status-left-bg}"
set -goqF @theme-status-left-fg "#{@powerline-status-left-fg}"
set -goq  @theme-status-left-length 40
set -goqF @theme-status-right "#[fg=#{@powerline-status-right-area-left-bg},bg=#{@theme-status-bg}]#[fg=#{@powerline-status-right-area-left-fg},bg=#{@powerline-status-right-area-left-bg}] #{@themepack-status-right-area-left-format} #[fg=#{@powerline-status-right-area-middle-bg},bg=#{@powerline-status-right-area-left-bg}]#[fg=#{@powerline-status-right-area-middle-fg},bg=#{@powerline-status-right-area-middle-bg}] #{@themepack-status-right-area-middle-format} #[fg=#{@powerline-status-right-area-right-bg},bg=#{@powerline-status-right-area-middle-bg}]#[fg=#{@powerline-status-right-area-right-fg},bg=#{@powerline-status-right-area-right-bg},bold] #{@themepack-status-right-area-right-format} "
set -goqF @theme-status-right-bg "#{@powerline-status-right-bg}"
set -goqF @theme-status-right-fg "#{@powerline-status-right-fg}"
set -goq  @theme-status-right-length 150
set -goqF @theme-window-status-activity-bg "#{@theme-status-bg}"
set -goqF @theme-window-status-activity-fg "#{@powerline-color-activity-1}"
set -goq  @theme-window-status-separator ""
set -goqF @theme-window-status-current-bg "#{@powerline-color-main-1}"
set -goqF @theme-window-status-current-fg "#{@powerline-color-black-1}"
set -goqF @theme-window-status-format " #{@themepack-window-status-format} "
set -goqF @theme-window-status-current-format " #{@themepack-window-status-current-format} "

# Customizable prefixes and suffixes for @theme-* format options
set -goq @theme-status-left-prefix ""
set -goq @theme-status-left-suffix ""
set -goq @theme-status-right-prefix ""
set -goq @theme-status-right-suffix ""
set -goq @theme-window-status-current-prefix ""
set -goq @theme-window-status-current-suffix ""
set -goq @theme-window-status-prefix ""
set -goq @theme-window-status-suffix ""

# Apply prefixes and suffixes to @theme-* format options
set -gqF @theme-status-left "#{@theme-status-left-prefix}#{@theme-status-left}#{@theme-status-left-suffix}"
set -gqF @theme-status-right "#{@theme-status-right-prefix}#{@theme-status-right}#{@theme-status-right-suffix}"
set -gqF @theme-window-status-current-format "#{@theme-window-status-current-prefix}#{@theme-window-status-current-format}#{@theme-window-status-current-suffix}"
set -gqF @theme-window-status-format "#{@theme-window-status-prefix}#{@theme-window-status-format}#{@theme-window-status-suffix}"

# Apply @theme-* options to Tmux
set -gF  display-panes-active-colour "#{@theme-display-panes-active-colour}"
set -gF  display-panes-colour "#{@theme-display-panes-colour}"
set -gF  message-command-style "fg=#{@theme-message-command-fg},bg=#{@theme-message-command-bg}"
set -gF  message-style "fg=#{@theme-message-fg},bg=#{@theme-message-bg}"
set -gF  status-interval "#{@theme-status-interval}"
set -gF  status-justify "#{@theme-status-justify}"
set -gF  status-left "#{@theme-status-left}"
set -gF  status-left-length "#{@theme-status-left-length}"
set -gF  status-left-style "fg=#{@theme-status-left-fg},bg=#{@theme-status-left-bg}"
set -gF  status-right "#{@theme-status-right}"
set -gF  status-right-length "#{@theme-status-right-length}"
set -gF  status-right-style "fg=#{@theme-status-right-fg},bg=#{@theme-status-right-bg}"
set -gF  status-style "fg=#{@theme-status-fg},bg=#{@theme-status-bg}"
set -gwF clock-mode-colour "#{@theme-clock-mode-colour}"
set -gwF clock-mode-style "#{@theme-clock-mode-style}"
set -gwF mode-style "fg=#{@theme-mode-fg},bg=#{@theme-mode-bg}"
set -gwF pane-active-border-style "fg=#{@theme-pane-active-border-fg},bg=#{@theme-pane-active-border-bg}"
set -gwF pane-border-style "fg=#{@theme-pane-border-fg},bg=#{@theme-pane-border-bg}"
set -gwF window-status-activity-style "fg=#{@theme-window-status-activity-fg},bg=#{@theme-window-status-activity-bg}"
set -gwF window-status-current-format "#{@theme-window-status-current-format}"
set -gwF window-status-current-style "fg=#{@theme-window-status-current-fg},bg=#{@theme-window-status-current-bg}"
set -gwF window-status-format "#{@theme-window-status-format}"
set -gwF window-status-separator "#{@theme-window-status-separator}"
